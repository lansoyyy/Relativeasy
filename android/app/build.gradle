plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.example.relativeasy"
    compileSdk = 35
    ndkVersion = "27.0.12077973"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.relativeasy"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        
        // Specify which ABIs to build for - this reduces the universal APK size
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            
            // Disable minification to resolve R8 compilation error
            minifyEnabled false
            shrinkResources false
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            
            // Exclude Rive native libraries from release build to avoid build issues
            packagingOptions {
                pickFirst '**/libc++_shared.so'
                exclude 'META-INF/*.kotlin_module'
            }
        }
    }
    
    // Add this block to handle native libraries
    packagingOptions {
        pickFirst '**/libc++_shared.so'
        exclude 'META-INF/*.kotlin_module'
    }
    
    // Remove splits block to generate universal APK
    // Split APKs by ABI
    // splits {
    //     abi {
    //         reset()
    //         enable true
    //         universalApk false  // If true, also generate a universal APK
    //         include 'arm64-v8a', 'armeabi-v7a'
    //     }
    // }
}

flutter {
    source = "../.."
}

apply plugin: 'com.google.gms.google-services'